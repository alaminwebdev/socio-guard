<?php

namespace App\Http\Controllers\Backend;

use App\Exports\MisReportExport;
use App\Http\Controllers\Controller;
use App\Model\Admin\Incident\PerpetratorInformation;
use App\Model\Admin\Incident\SurvivorBracSupport;
use App\Model\Admin\Incident\SurvivorIncidentInformation;
use App\Model\Admin\Incident\SurvivorOtherOrganizationSupport;
use App\Model\Admin\Setup\CEP_Region\Region;
use App\Model\Admin\Setup\CEP_Region\RegionAreaDetail;
use App\Model\Admin\Setup\District;
use App\Model\Admin\Setup\Division;
use App\Model\Admin\Setup\EconomicCondition;
use App\Model\Admin\Setup\FamilyMember;
use App\Model\Admin\Setup\Gender;
use App\Model\Admin\Setup\InformationProviderSource;
use App\Model\Admin\Setup\LegelInitiativeReason;
use App\Model\Admin\Setup\MaritalStatus;
use App\Model\Admin\Setup\Occupation;
use App\Model\Admin\Setup\OrganizationName;
use App\Model\Admin\Setup\OrganizationType;
use App\Model\Admin\Setup\OtherOrganizationSupport;
use App\Model\Admin\Setup\PerpetratorPlace;
use App\Model\Admin\Setup\Program;
use App\Model\Admin\Setup\Religion;
use App\Model\Admin\Setup\SocialStatus;
use App\Model\Admin\Setup\SuprvivorInitialSupport;
use App\Model\Admin\Setup\SurvivorAutisticInformation;
use App\Model\Admin\Setup\SurvivorFinalSupport;
use App\Model\Admin\Setup\SurvivorIncidentPlace;
use App\Model\Admin\Setup\SurvivorRelationship;
use App\Model\Admin\Setup\SurvivorSituation;
use App\Model\Admin\Setup\SurvivorSupportName;
use App\Model\Admin\Setup\SurvivorSupportOrganization;
use App\Model\Admin\Setup\SurvivorViolencePlace;
use App\Model\Admin\Setup\Union;
use App\Model\Admin\Setup\Upazila;
use App\Model\Admin\Setup\Village;
use App\Model\Admin\Setup\ViolenceCategory;
use App\Model\Admin\Setup\ViolenceName;
use App\Model\Admin\Setup\ViolenceReason;
use App\Model\Admin\Setup\ViolenceSubCategory;
use App\User;
use Auth;
use DataTables;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\DB;
use Maatwebsite\Excel\Facades\Excel;
use PDF;
use Session;

class SupportReportController extends Controller
{
    public function supportReport()
    {
        $data['violence_categories'] = ViolenceCategory::where('status','1')->get();
        $data['regions']  = Region::where('status','1')->get();
        $data['organization_types'] = SurvivorSupportOrganization::where('status','1')->get();
        $data['survivor_final_support'] = SurvivorFinalSupport::where('status','1')->orderBy('survivor_support_organization_id', 'asc')->get();
        return view('backend.report.support_report_view', $data);
    }

    public function supportReportPdf(Request $request)
    {

        // dd($request->all());
        $from_date = date('Y-m-d', strtotime($request->from_date));
        $to_date = date('Y-m-d', strtotime($request->to_date));
        $where[] = ['status','=','1'];
        $wherein = [];

        $support_id = $request->brac_support_id;

        $params = [
        'from_date' => $from_date,
        'to_date' =>$to_date,
        'support_id' =>$support_id
        ];
        // From Year - To Year
        if ($request->violence_sub_category_all != 1 && $request->violence_sub_category_id == null) {
            // For Violence Category All
            if ($request->violence_category_all == 1) {
                if ($request->survivor_support_organization_id == 1) {
                    $data = ViolenceCategory::with(['survivor_incident_information' => function($query) use($params) {
                        $query->whereHas('survivor_brac_support', function($q) use($params){
                            $q->where('survivor_final_support_id', $params['support_id']);
                        });
                        $query->with(['survivor_brac_support' => function($qw) use($params){
                            $qw->where('survivor_final_support_id', $params['support_id']);
                        }]);
                        $query->with(['survivor_gender']);
                    }]);
                } else {
                    $data = ViolenceCategory::with(['survivor_incident_information' => function($query) use($params) {
                        $query->whereHas('survivor_other_organization_support', function($q) use($params){
                            $q->where('survivor_final_support_id', $params['support_id']);
                        });
                        $query->with(['survivor_other_organization_support' => function($qw) use($params){
                            $qw->where('survivor_final_support_id', $params['support_id']);
                        }]);
                        $query->with(['survivor_gender']);
                    }]);
                }
            } else {
            // For Violence Category Single
                if ($request->survivor_support_organization_id == 1) {
                    $data = ViolenceCategory::where('id', $request->violence_category_id)->with(['survivor_incident_information' => function($query) use($params) {
                        $query->whereHas('survivor_brac_support', function($q) use($params){
                            $q->where('survivor_final_support_id', $params['support_id']);
                        });
                        $query->with(['survivor_brac_support' => function($qw) use($params){
                            $qw->where('survivor_final_support_id', $params['support_id']);
                        }]);
                        $query->with(['survivor_gender']);
                    }]);
                } else {
                    $data = ViolenceCategory::where('id', $request->violence_category_id)->with(['survivor_incident_information' => function($query) use($params) {
                        $query->whereHas('survivor_other_organization_support', function($q) use($params){
                            $q->where('survivor_final_support_id', $params['support_id']);
                        });
                        $query->with(['survivor_other_organization_support' => function($qw) use($params){
                            $qw->where('survivor_final_support_id', $params['support_id']);
                        }]);
                        $query->with(['survivor_gender']);
                    }]);
                }
            }
        } elseif ($request->violence_name_all != 1 && $request->violence_name_id == null){
            // For Violence Sub Category All
            if ($request->violence_sub_category_all == 1) {
                if ($request->survivor_support_organization_id == 1) {
                    $data = ViolenceSubCategory::where('violence_category_id', $request->violence_category_id)
                    ->with(['survivor_incident_information' => function($query) use($params) {
                        $query->whereHas('survivor_brac_support', function($q) use($params){
                            $q->where('survivor_final_support_id', $params['support_id']);
                        });
                        $query->with(['survivor_brac_support' => function($qw) use($params){
                            $qw->where('survivor_final_support_id', $params['support_id']);
                        }]);
                        $query->with(['survivor_gender']);
                    }]);
                } else {
                    $data = ViolenceSubCategory::where('violence_category_id', $request->violence_category_id)
                    ->with(['survivor_incident_information' => function($query) use($params) {
                        $query->whereHas('survivor_other_organization_support', function($q) use($params){
                            $q->where('survivor_final_support_id', $params['support_id']);
                        });
                        $query->with(['survivor_other_organization_support' => function($qw) use($params){
                            $qw->where('survivor_final_support_id', $params['support_id']);
                        }]);
                        $query->with(['survivor_gender']);
                    }]);
                }
            } else {
            // For Violence Sub Category Single
                if ($request->survivor_support_organization_id == 1) {
                    $data = ViolenceSubCategory::where('violence_category_id', $request->violence_category_id)->whereIn('id', $request->violence_sub_category_id)
                    ->with(['survivor_incident_information' => function($query) use($params) {
                        $query->whereHas('survivor_brac_support', function($q) use($params){
                            $q->where('survivor_final_support_id', $params['support_id']);
                        });
                        $query->with(['survivor_brac_support' => function($qw) use($params){
                            $qw->where('survivor_final_support_id', $params['support_id']);
                        }]);
                        $query->with(['survivor_gender']);
                    }]);
                } else {
                    $data = ViolenceSubCategory::where('violence_category_id', $request->violence_category_id)->whereIn('id', $request->violence_sub_category_id)
                    ->with(['survivor_incident_information' => function($query) use($params) {
                        $query->whereHas('survivor_other_organization_support', function($q) use($params){
                            $q->where('survivor_final_support_id', $params['support_id']);
                        });
                        $query->with(['survivor_other_organization_support' => function($qw) use($params){
                            $qw->where('survivor_final_support_id', $params['support_id']);
                        }]);
                        $query->with(['survivor_gender']);
                    }]);
                }
            }
        } else {
            // For Violence Name All
            if ($request->violence_name_all == 1) {
                if ($request->survivor_support_organization_id == 1) {
                    $data = ViolenceName::where('violence_category_id', $request->violence_category_id)
                    ->with(['survivor_incident_information' => function($query) use($params) {
                        $query->whereHas('survivor_brac_support', function($q) use($params){
                            $q->where('survivor_final_support_id', $params['support_id']);
                        });
                        $query->with(['survivor_brac_support' => function($qw) use($params){
                            $qw->where('survivor_final_support_id', $params['support_id']);
                        }]);
                        $query->with(['survivor_gender']);
                    }]);
                } else {
                    $data = ViolenceName::where('violence_category_id', $request->violence_category_id)
                    ->with(['survivor_incident_information' => function($query) use($params) {
                        $query->whereHas('survivor_other_organization_support', function($q) use($params){
                            $q->where('survivor_final_support_id', $params['support_id']);
                        });
                        $query->with(['survivor_other_organization_support' => function($qw) use($params){
                            $qw->where('survivor_final_support_id', $params['support_id']);
                        }]);
                        $query->with(['survivor_gender']);
                    }]);
                }
            } else {
            // For Violence Name Single
                if ($request->survivor_support_organization_id == 1) {
                    $data = ViolenceName::where('violence_category_id', $request->violence_category_id)->whereIn('id', $request->violence_name_id)
                    ->with(['survivor_incident_information' => function($query) use($params) {
                        $query->whereHas('survivor_brac_support', function($q) use($params){
                            $q->where('survivor_final_support_id', $params['support_id']);
                        });
                        $query->with(['survivor_brac_support' => function($qw) use($params){
                            $qw->where('survivor_final_support_id', $params['support_id']);
                        }]);
                        $query->with(['survivor_gender']);
                    }]);
                } else {
                    $data = ViolenceName::where('violence_category_id', $request->violence_category_id)->whereIn('id', $request->violence_name_id)
                    ->with(['survivor_incident_information' => function($query) use($params) {
                        $query->whereHas('survivor_other_organization_support', function($q) use($params){
                            $q->where('survivor_final_support_id', $params['support_id']);
                        });
                        $query->with(['survivor_other_organization_support' => function($qw) use($params){
                            $qw->where('survivor_final_support_id', $params['support_id']);
                        }]);
                        $query->with(['survivor_gender']);
                    }]);
                }
            }
        }

        $incidents = $data->get();
        // dd($incidents->toArray());
        // if($request->region_all != 1){
        //     $allDistrict = RegionAreaDetail::where('region_id',$request->region_id)->where('status','1')->groupBy('district_id')->pluck('district_id')->toArray();
        //     $wherein = $allDistrict;
        // }else{
        //     $allDistrict = RegionAreaDetail::where('status','1')->groupBy('district_id')->pluck('district_id')->toArray();
        //     $wherein = $allDistrict;
        // }
        if (!empty($request->region_id) && empty($request->division_id)) {
            $allDistrict = RegionAreaDetail::where('region_id',$request->region_id)->where('status','1')->groupBy('district_id')->pluck('district_id')->toArray();
            $wherein = $allDistrict;
        } else {
            if($request->division_id) {
                $where[] = ['employee_division_id','=',$request->division_id];
            }
            if($request->district_id) {
                $where[] = ['employee_district_id','=',$request->district_id];
            }
            if($request->upazila_id) {
                $where[] = ['employee_upazila_id','=',$request->upazila_id];
            }
        }
        $survivor_info = [];

        foreach($incidents as $key => $incident){
            $survivor_info[$key]['rows'] = count($incidents);
            $survivor_info[$key]['type'] = $incident->name;
            if(!empty($incident['survivor_incident_information']) && count($incident['survivor_incident_information'])>0){
                /*From - To Year Survivor Incident Information*/
                // $year_between = SurvivorIncidentInformation::whereIn('id',$incident['survivor_incident_information']->pluck('id'))
                // ->whereBetween('violence_date', [$from_year_start, $end_date])->get();
                // if ($wherein != null) {
                //     $year_between = SurvivorIncidentInformation::where($where)->whereIn('employee_district_id',$wherein)->whereIn('id',$incident['survivor_incident_information']->pluck('id'))
                //     ->whereBetween('created_at', [$from_date.' 00:00:00',$to_date.' 23:59:59'])->get();
                // } else {
                //     $year_between = SurvivorIncidentInformation::where($where)->whereIn('id',$incident['survivor_incident_information']->pluck('id'))
                //     ->whereBetween('created_at', [$from_date.' 00:00:00',$to_date.' 23:59:59'])->get();
                // }


                if ($request->survivor_support_organization_id == 1) {
                    if ($wherein != null) {
                        $year_between = SurvivorIncidentInformation::whereHas('survivor_brac_support', function($query) use ($from_date,$to_date){
                            $query->whereBetween('survivor_support_date', [$from_date, $to_date]);
                        })
                        ->where($where)
                        ->whereIn('employee_district_id',$wherein)
                        ->whereIn('id',$incident['survivor_incident_information']
                        ->pluck('id'))
                        ->get();
                    } else {
                        $year_between = SurvivorIncidentInformation::whereHas('survivor_brac_support', function($query) use ($from_date,$to_date){
                            $query->whereBetween('survivor_support_date', [$from_date, $to_date]);
                        })
                        ->where($where)
                        ->whereIn('id',$incident['survivor_incident_information']
                        ->pluck('id'))
                        ->get();
                        // dd($year_between);
                    }
                } else {
                    if ($wherein != null) {
                        $year_between = SurvivorIncidentInformation::whereHas('survivor_other_organization_support', function($query) use ($from_date,$to_date){
                            $query->whereBetween('survivor_other_support_date', [$from_date, $to_date]);
                        })
                        ->where($where)
                        ->whereIn('employee_district_id',$wherein)
                        ->whereIn('id',$incident['survivor_incident_information']
                        ->pluck('id'))
                        ->get();
                    } else {
                        $year_between = SurvivorIncidentInformation::whereHas('survivor_other_organization_support', function($query) use ($from_date,$to_date){
                            $query->whereBetween('survivor_other_support_date', [$from_date, $to_date]);
                        })
                        ->where($where)
                        ->whereIn('id',$incident['survivor_incident_information']
                        ->pluck('id'))
                        ->get();
                    }
                }


                if(!empty($year_between) && count($year_between) > 0){
                    $survivor_info[$key]['year_between']['male'] = 0;
                    $survivor_info[$key]['year_between']['female'] = 0;
                    foreach($year_between as $yb){
                        // if($yb->survivor_gender->name == 'Male'){
                        //     $survivor_info[$key]['year_between']['male'] +=1 ;

                        // }

                        // if($yb->survivor_gender->name == 'Female'){
                        //     $survivor_info[$key]['year_between']['female'] +=1 ;

                        // }
                        if(!empty($yb->survivor_gender) && $yb->survivor_gender->name == 'Male'){
                            $survivor_info[$key]['year_between']['male'] +=1 ;

                        }

                        if(!empty($yb->survivor_gender) && $yb->survivor_gender->name == 'Female'){
                            $survivor_info[$key]['year_between']['female'] +=1 ;

                        }
                    }
                    $survivor_info[$key]['year_between']['total'] = $survivor_info[$key]['year_between']['male'] + $survivor_info[$key]['year_between']['female'];
                }else{
                    $survivor_info[$key]['year_between']['male'] = 0;
                    $survivor_info[$key]['year_between']['female'] = 0;
                    $survivor_info[$key]['year_between']['total'] = 0;
                }

            }else{
                $survivor_info[$key]['year_between']['male'] = 0;
                $survivor_info[$key]['year_between']['female'] = 0;
                $survivor_info[$key]['year_between']['total'] = 0;
            }
        }

        $pdata['survivor_info'] = $survivor_info;
        $pdata['from_date'] = $from_date;
        $pdata['to_date'] = $to_date;
        $pdata['support_name'] = SurvivorFinalSupport::where('id', $support_id)->first();
        // dd($pdata['support_name']->toArray());

        // return view('backend.report.mis_html_view', $pdata);

        if ($request->format_download == 1) {
            $pdf = PDF::loadView('backend.report.pdf.support_report', $pdata);
            $pdf->SetProtection(['copy', 'print'], '', 'pass');
            return $pdf->stream('document.pdf');
        } else {
            $view_link = 'backend.report.excel.support-report-excel';
            return Excel::download(new MisReportExport($pdata,$view_link), 'support_report.xlsx');
        }
    }


    //Report Controller previous data
    public function misReport()
    {
        $data['violence_categories'] = ViolenceCategory::where('status','1')->get();
        $data['regions']            = Region::where('status','1')->get();
        return view('backend.report.mis_report_view',$data);
    }

    public function misReportPdf(Request $request)
    {
        $from_year_start = '';
        $end_date = '';
        $from_year = '';
        $to_year = '';
        $month = '';
        $where[] = ['status','=','1'];
        $wherein = [];

        if (isset($request->from_year) && isset($request->to_year)) {
            $month = $request->month;
            $from_year = $request->from_year;
            $to_year = $request->to_year;

            $from_year_start = $from_year.'-01-01';
            $end_date = $to_year.'-12-31';

            $from_month_start = $from_year.'-'.$month.'-01';
            $to_month_start = $to_year.'-'.$month.'-01';


            $from_month_end = $from_year.'-'.$month.'-'.get_days_in_month($month, $from_year);
            $to_month_end = $to_year.'-'.$month.'-'.get_days_in_month($month, $to_year);

            $to_year_start = $to_year.'-01-01';

            $from_year_end = $from_year.'-'.$month.'-'.get_days_in_month($month, $from_year);
            $to_year_end = $to_year.'-'.$month.'-'.get_days_in_month($month, $from_year);
        }

        ;
        $current_year = date("Y");
        $current_year_start = $current_year.'-01-01';
        $current_month_start = $current_year.'-'.$month.'-01';
        $current_year_date = date("Y-m-d");

        // From Year - To Year
        if ($request->violence_sub_category_all != 1 && $request->violence_sub_category_id == null) {
            if ($request->violence_category_all == 1) {
                $data = ViolenceCategory::with(['survivor_incident_information' => function($query) use($from_year_start, $end_date, $current_year_start, $current_year_date) {
                    $query->with(['survivor_gender']);

                }]);

            } else {
                $data = ViolenceCategory::where('id', $request->violence_category_id)->with(['survivor_incident_information' => function($query) use($from_year_start, $end_date, $current_year_start, $current_year_date) {
                    $query->with(['survivor_gender']);
                }]);
            }
        } elseif ($request->violence_name_all != 1 && $request->violence_name_id == null){
            if ($request->violence_sub_category_all == 1) {
                $data = ViolenceSubCategory::where('violence_category_id', $request->violence_category_id)
                ->with(['survivor_incident_information' => function($query) use($from_year_start, $end_date, $current_year_start, $current_year_date) {
                    $query->with(['survivor_gender']);
                }]);
            } else {
                $data = ViolenceSubCategory::where('violence_category_id', $request->violence_category_id)->whereIn('id', $request->violence_sub_category_id)
                ->with(['survivor_incident_information' => function($query) use($from_year_start, $end_date, $current_year_start, $current_year_date) {
                    $query->with(['survivor_gender']);
                }]);
            }
        } else {
            if ($request->violence_name_all == 1) {
                $data = ViolenceName::where('violence_category_id', $request->violence_category_id)
                ->with(['survivor_incident_information' => function($query) use($from_year_start, $end_date, $current_year_start, $current_year_date) {
                    $query->with(['survivor_gender']);
                }]);
            } else {
                $data = ViolenceName::where('violence_category_id', $request->violence_category_id)->whereIn('id', $request->violence_name_id)
                ->with(['survivor_incident_information' => function($query) use($from_year_start, $end_date, $current_year_start, $current_year_date) {
                    $query->with(['survivor_gender']);
                }]);
            }
        }

        $incidents = $data->get();

        // dd($incidents->toArray());

        if($request->region_all != 1){
            $allDistrict = RegionAreaDetail::where('region_id',$request->region_id)->where('status','1')->groupBy('district_id')->pluck('district_id')->toArray();
            $wherein = $allDistrict;
        }else{
            $allDistrict = RegionAreaDetail::where('status','1')->groupBy('district_id')->pluck('district_id')->toArray();
            $wherein = $allDistrict;
        }
        if($request->division_id !=''){
            $where[] = ['survivor_division_id','=',$request->division_id];
        }
        if($request->district_id !=''){
            $where[] = ['survivor_district_id','=',$request->district_id];
        }
        if($request->upazila_id !=''){
            $where[] = ['survivor_upazila_id','=',$request->upazila_id];
        }


        $survivor_info = [];

        foreach($incidents as $key => $incident){
            $survivor_info[$key]['rows'] = count($incidents);
            $survivor_info[$key]['type'] = $incident->name;
            if(!empty($incident['survivor_incident_information']) && count($incident['survivor_incident_information'])>0){
                /*From - To Year Survivor Incident Information*/
                if ($wherein != null) {
                    $year_between = SurvivorIncidentInformation::where($where)->whereIn('survivor_district_id',$wherein)->whereIn('id',$incident['survivor_incident_information']->pluck('id'))
                    ->whereBetween('violence_date', [$from_year_start, $end_date])->get();
                } else {
                    $year_between = SurvivorIncidentInformation::where($where)->whereIn('id',$incident['survivor_incident_information']->pluck('id'))
                    ->whereBetween('violence_date', [$from_year_start, $end_date])->get();
                }


                if(!empty($year_between) && count($year_between) > 0){
                    $survivor_info[$key]['year_between']['male'] = 0;
                    $survivor_info[$key]['year_between']['female'] = 0;
                    foreach($year_between as $yb){
                        // if($yb->survivor_gender->name == 'Male'){
                        //     $survivor_info[$key]['year_between']['male'] +=1 ;

                        // }

                        // if($yb->survivor_gender->name == 'Female'){
                        //     $survivor_info[$key]['year_between']['female'] +=1 ;

                        // }
                        if(!empty($yb->survivor_gender) && $yb->survivor_gender->name == 'Male'){
                            $survivor_info[$key]['year_between']['male'] +=1 ;

                        }

                        if(!empty($yb->survivor_gender) && $yb->survivor_gender->name == 'Female'){
                            $survivor_info[$key]['year_between']['female'] +=1 ;

                        }
                    }
                    $survivor_info[$key]['year_between']['total'] = $survivor_info[$key]['year_between']['male'] + $survivor_info[$key]['year_between']['female'];
                }else{
                    $survivor_info[$key]['year_between']['male'] = 0;
                    $survivor_info[$key]['year_between']['female'] = 0;
                    $survivor_info[$key]['year_between']['total'] = 0;
                }

                /*Current Month Survivor Incident Information*/
                if ($wherein != null) {
                    $current_month = SurvivorIncidentInformation::where($where)->whereIn('survivor_district_id',$wherein)->whereIn('id',$incident['survivor_incident_information']->pluck('id'))
                    ->whereBetween('violence_date', [$current_month_start, $current_year_date])->get();
                } else {
                    $current_month = SurvivorIncidentInformation::where($where)->whereIn('id',$incident['survivor_incident_information']->pluck('id'))
                    ->whereBetween('violence_date', [$current_month_start, $current_year_date])->get();
                }


                if(!empty($current_month) && count($current_month) > 0){
                    $survivor_info[$key]['current_month']['male'] = 0;
                    $survivor_info[$key]['current_month']['female'] = 0;
                    foreach($current_month as $yb){
                        // if($yb->survivor_gender->name == 'Male'){
                        //     $survivor_info[$key]['current_month']['male'] +=1 ;

                        // }

                        // if($yb->survivor_gender->name == 'Female'){
                        //     $survivor_info[$key]['current_month']['female'] +=1 ;

                        // }
                        if(!empty($yb->survivor_gender) && $yb->survivor_gender->name == 'Male'){
                            $survivor_info[$key]['current_month']['male'] +=1 ;

                        }

                        if(!empty($yb->survivor_gender) && $yb->survivor_gender->name == 'Female'){
                            $survivor_info[$key]['current_month']['female'] +=1 ;

                        }
                    }
                    $survivor_info[$key]['current_month']['total'] = $survivor_info[$key]['current_month']['male'] + $survivor_info[$key]['current_month']['female'];
                }else{
                    $survivor_info[$key]['current_month']['male'] = 0;
                    $survivor_info[$key]['current_month']['female'] = 0;
                    $survivor_info[$key]['current_month']['total'] = 0;
                }

                /*For Year Survivor Incident Information*/
                if ($wherein != null) {
                    $for_year = SurvivorIncidentInformation::where($where)->whereIn('survivor_district_id',$wherein)->whereIn('id',$incident['survivor_incident_information']->pluck('id'))
                    ->whereBetween('violence_date', [$current_year_start,$current_year_date])->get();
                } else {
                    $for_year = SurvivorIncidentInformation::where($where)->whereIn('id',$incident['survivor_incident_information']->pluck('id'))
                    ->whereBetween('violence_date', [$current_year_start,$current_year_date])->get();
                }


                if(!empty($for_year) && count($for_year) > 0){
                    $survivor_info[$key]['for_year']['male'] = 0;
                    $survivor_info[$key]['for_year']['female'] = 0;
                    foreach($for_year as $yb){
                        // if($yb->survivor_gender->name == 'Male'){
                        //     $survivor_info[$key]['for_year']['male'] +=1 ;

                        // }

                        // if($yb->survivor_gender->name == 'Female'){
                        //     $survivor_info[$key]['for_year']['female'] +=1 ;

                        // }
                        if(!empty($yb->survivor_gender) && $yb->survivor_gender->name == 'Male'){
                            $survivor_info[$key]['for_year']['male'] +=1 ;

                        }

                        if(!empty($yb->survivor_gender) && $yb->survivor_gender->name == 'Female'){
                            $survivor_info[$key]['for_year']['female'] +=1 ;

                        }
                    }
                    $survivor_info[$key]['for_year']['total'] = $survivor_info[$key]['for_year']['male'] + $survivor_info[$key]['for_year']['female'];
                }else{
                    $survivor_info[$key]['for_year']['male'] = 0;
                    $survivor_info[$key]['for_year']['female'] = 0;
                    $survivor_info[$key]['for_year']['total'] = 0;
                }

                /*Year_to_present_month Survivor Incident Information*/
                if ($wherein != null) {
                    $year_to_present_month = SurvivorIncidentInformation::where($where)->whereIn('survivor_district_id',$wherein)->whereIn('id',$incident['survivor_incident_information']->pluck('id'))
                    ->whereBetween('violence_date', [$from_year_start,$current_year_date])->get();
                } else {
                    $year_to_present_month = SurvivorIncidentInformation::where($where)->whereIn('id',$incident['survivor_incident_information']->pluck('id'))
                    ->whereBetween('violence_date', [$from_year_start,$current_year_date])->get();
                }


                if(!empty($year_to_present_month) && count($year_to_present_month) > 0){
                    $survivor_info[$key]['year_to_present_month']['male'] = 0;
                    $survivor_info[$key]['year_to_present_month']['female'] = 0;
                    foreach($year_to_present_month as $yb){
                        // if($yb->survivor_gender->name == 'Male'){
                        //     $survivor_info[$key]['year_to_present_month']['male'] +=1 ;

                        // }

                        // if($yb->survivor_gender->name == 'Female'){
                        //     $survivor_info[$key]['year_to_present_month']['female'] +=1 ;

                        // }
                        if(!empty($yb->survivor_gender) && $yb->survivor_gender->name == 'Male'){
                            $survivor_info[$key]['year_to_present_month']['male'] +=1 ;

                        }

                        if(!empty($yb->survivor_gender) && $yb->survivor_gender->name == 'Female'){
                            $survivor_info[$key]['year_to_present_month']['female'] +=1 ;

                        }
                    }
                    $survivor_info[$key]['year_to_present_month']['total'] = $survivor_info[$key]['year_to_present_month']['male'] + $survivor_info[$key]['year_to_present_month']['female'];
                }else{
                    $survivor_info[$key]['year_to_present_month']['male'] = 0;
                    $survivor_info[$key]['year_to_present_month']['female'] = 0;
                    $survivor_info[$key]['year_to_present_month']['total'] = 0;
                }


            }else{
                $survivor_info[$key]['year_between']['male'] = 0;
                $survivor_info[$key]['year_between']['female'] = 0;
                $survivor_info[$key]['year_between']['total'] = 0;

                $survivor_info[$key]['current_month']['male'] = 0;
                $survivor_info[$key]['current_month']['female'] = 0;
                $survivor_info[$key]['current_month']['total'] = 0;

                $survivor_info[$key]['for_year']['male'] = 0;
                $survivor_info[$key]['for_year']['female'] = 0;
                $survivor_info[$key]['for_year']['total'] = 0;

                $survivor_info[$key]['year_to_present_month']['male'] = 0;
                $survivor_info[$key]['year_to_present_month']['female'] = 0;
                $survivor_info[$key]['year_to_present_month']['total'] = 0;
            }
        }

        $pdata['survivor_info'] = $survivor_info;
        // dd($survivor_info);
        $pdata['from_year'] = $from_year;
        $pdata['to_year'] = $to_year;
        $pdata['month'] = date('F', mktime(0,0,0,$month,1));



        if ($request->format_download == 1) {
            $pdf = PDF::loadView('backend.report.pdf.mis_report', $pdata);
            $pdf->SetProtection(['copy', 'print'], '', 'pass');
            return $pdf->stream('document.pdf');
        } else {
            $view_link = 'backend.report.excel.mis-report-excel';
            return Excel::download(new MisReportExport($pdata,$view_link), 'mis_report.xlsx');
        }
    }


    /*Support Report*/

    public function supportReport()
    {
        $data['violence_categories'] = ViolenceCategory::where('status','1')->get();
        $data['regions']  = Region::where('status','1')->get();
        $data['organization_types'] = SurvivorSupportOrganization::where('status','1')->get();
        $data['survivor_final_support'] = SurvivorFinalSupport::where('status','1')->orderBy('survivor_support_organization_id', 'asc')->get();
        return view('backend.report.support_report_view', $data);
    }

    public function supportReportPdf(Request $request)
    {

        // dd($request->all());
        $from_year_start = '';
        $end_date = '';
        $from_year = '';
        $to_year = '';
        $month = '';
        $where[] = ['status','=','1'];
        $wherein = [];

        if (isset($request->from_year) && isset($request->to_year)) {
            $month = $request->month;
            $from_year = $request->from_year;
            $to_year = $request->to_year;

            $from_year_start = $from_year.'-01-01';
            $end_date = $to_year.'-12-31';

            $from_month_start = $from_year.'-'.$month.'-01';
            $to_month_start = $to_year.'-'.$month.'-01';


            $from_month_end = $from_year.'-'.$month.'-'.get_days_in_month($month, $from_year);
            $to_month_end = $to_year.'-'.$month.'-'.get_days_in_month($month, $to_year);

            $to_year_start = $to_year.'-01-01';

            $from_year_end = $from_year.'-'.$month.'-'.get_days_in_month($month, $from_year);
            $to_year_end = $to_year.'-'.$month.'-'.get_days_in_month($month, $from_year);
        }

        ;
        $current_year = date("Y");
        $current_year_start = $current_year.'-01-01';
        $current_month_start = $current_year.'-'.$month.'-01';
        $current_year_date = date("Y-m-d");

        $support_id = $request->brac_support_id;


        // $support = SurvivorFinalSupport::where('survivor_support_organization_id', 1)->with(['survivor_brac_support' => function($query){
        //     $query->with(['survivor_incident_information' => function ($q) {
        //         $q->with(['violencecategoryname']);
        //     }]);
        // }])->get();
        // dd($support->toArray());
        // return view('backend.report.pdf.support_report');

        $params = [
            'from_year_start' => $from_year_start, 'end_date' =>$end_date,
            'current_year_start' => $current_year_start,
            'current_year_date' =>$current_year_date,
            'support_id' =>$support_id
        ];
        // dd($params);
        // From Year - To Year
        if ($request->violence_sub_category_all != 1 && $request->violence_sub_category_id == null) {
            if ($request->violence_category_all == 1) {
                $data = ViolenceCategory::with(['survivor_incident_information' => function($query) use($params) {
                    $query->whereHas('survivor_brac_support', function($q) use($params){
                        $q->where('survivor_final_support_id', $params['support_id']);
                    });
                    $query->with(['survivor_brac_support' => function($qw) use($params){
                        $qw->where('survivor_final_support_id', $params['support_id']);
                    }]);
                    $query->with(['survivor_gender']);
                }]);
            } else {
                $data = ViolenceCategory::where('id', $request->violence_category_id)->with(['survivor_incident_information' => function($query) use($params) {
                    $query->whereHas('survivor_brac_support', function($q) use($params){
                        $q->where('survivor_final_support_id', $params['support_id']);
                    });
                    $query->with(['survivor_brac_support' => function($qw) use($params){
                        $qw->where('survivor_final_support_id', $params['support_id']);
                    }]);
                    $query->with(['survivor_gender']);
                }]);
            }
        } elseif ($request->violence_name_all != 1 && $request->violence_name_id == null){
            if ($request->violence_sub_category_all == 1) {
                $data = ViolenceSubCategory::where('violence_category_id', $request->violence_category_id)
                ->with(['survivor_incident_information' => function($query) use($params) {
                    $query->whereHas('survivor_brac_support', function($q) use($params){
                        $q->where('survivor_final_support_id', $params['support_id']);
                    });
                    $query->with(['survivor_brac_support' => function($qw) use($params){
                        $qw->where('survivor_final_support_id', $params['support_id']);
                    }]);
                    $query->with(['survivor_gender']);
                }]);
            } else {
                $data = ViolenceSubCategory::where('violence_category_id', $request->violence_category_id)->whereIn('id', $request->violence_sub_category_id)
                ->with(['survivor_incident_information' => function($query) use($params) {
                    $query->whereHas('survivor_brac_support', function($q) use($params){
                        $q->where('survivor_final_support_id', $params['support_id']);
                    });
                    $query->with(['survivor_brac_support' => function($qw) use($params){
                        $qw->where('survivor_final_support_id', $params['support_id']);
                    }]);
                    $query->with(['survivor_gender']);
                }]);
            }
        } else {
            if ($request->violence_name_all == 1) {
                $data = ViolenceName::where('violence_category_id', $request->violence_category_id)
                ->with(['survivor_incident_information' => function($query) use($params) {
                    $query->whereHas('survivor_brac_support', function($q) use($params){
                        $q->where('survivor_final_support_id', $params['support_id']);
                    });
                    $query->with(['survivor_brac_support' => function($qw) use($params){
                        $qw->where('survivor_final_support_id', $params['support_id']);
                    }]);
                    $query->with(['survivor_gender']);
                }]);
            } else {
                $data = ViolenceName::where('violence_category_id', $request->violence_category_id)->whereIn('id', $request->violence_name_id)
                ->with(['survivor_incident_information' => function($query) use($params) {
                    $query->whereHas('survivor_brac_support', function($q) use($params){
                        $q->where('survivor_final_support_id', $params['support_id']);
                    });
                    $query->with(['survivor_brac_support' => function($qw) use($params){
                        $qw->where('survivor_final_support_id', $params['support_id']);
                    }]);
                    $query->with(['survivor_gender']);
                }]);
            }
        }

        $incidents = $data->get();
        // dd($incidents->toArray());
        if($request->region_all != 1){
            $allDistrict = RegionAreaDetail::where('region_id',$request->region_id)->where('status','1')->groupBy('district_id')->pluck('district_id')->toArray();
            $wherein = $allDistrict;
        }else{
            $allDistrict = RegionAreaDetail::where('status','1')->groupBy('district_id')->pluck('district_id')->toArray();
            $wherein = $allDistrict;
        }
        if($request->division_id !=''){
            $where[] = ['survivor_division_id','=',$request->division_id];
        }
        if($request->district_id !=''){
            $where[] = ['survivor_district_id','=',$request->district_id];
        }
        if($request->upazila_id !=''){
            $where[] = ['survivor_upazila_id','=',$request->upazila_id];
        }
        $survivor_info = [];

        foreach($incidents as $key => $incident){
            $survivor_info[$key]['rows'] = count($incidents);
            $survivor_info[$key]['type'] = $incident->name;
            if(!empty($incident['survivor_incident_information']) && count($incident['survivor_incident_information'])>0){
                /*From - To Year Survivor Incident Information*/
                // $year_between = SurvivorIncidentInformation::whereIn('id',$incident['survivor_incident_information']->pluck('id'))
                // ->whereBetween('violence_date', [$from_year_start, $end_date])->get();
                if ($wherein != null) {
                    $year_between = SurvivorIncidentInformation::where($where)->whereIn('survivor_district_id',$wherein)->whereIn('id',$incident['survivor_incident_information']->pluck('id'))
                    ->whereBetween('violence_date', [$from_year_start, $end_date])->get();
                } else {
                    $year_between = SurvivorIncidentInformation::where($where)->whereIn('id',$incident['survivor_incident_information']->pluck('id'))
                    ->whereBetween('violence_date', [$from_year_start, $end_date])->get();
                }

                if(!empty($year_between) && count($year_between) > 0){
                    $survivor_info[$key]['year_between']['male'] = 0;
                    $survivor_info[$key]['year_between']['female'] = 0;
                    foreach($year_between as $yb){
                        // if($yb->survivor_gender->name == 'Male'){
                        //     $survivor_info[$key]['year_between']['male'] +=1 ;

                        // }

                        // if($yb->survivor_gender->name == 'Female'){
                        //     $survivor_info[$key]['year_between']['female'] +=1 ;

                        // }
                        if(!empty($yb->survivor_gender) && $yb->survivor_gender->name == 'Male'){
                            $survivor_info[$key]['year_between']['male'] +=1 ;

                        }

                        if(!empty($yb->survivor_gender) && $yb->survivor_gender->name == 'Female'){
                            $survivor_info[$key]['year_between']['female'] +=1 ;

                        }
                    }
                    $survivor_info[$key]['year_between']['total'] = $survivor_info[$key]['year_between']['male'] + $survivor_info[$key]['year_between']['female'];
                }else{
                    $survivor_info[$key]['year_between']['male'] = 0;
                    $survivor_info[$key]['year_between']['female'] = 0;
                    $survivor_info[$key]['year_between']['total'] = 0;
                }

                /*Current Month Survivor Incident Information*/
                // $current_month = SurvivorIncidentInformation::whereIn('id',$incident['survivor_incident_information']->pluck('id'))
                // ->whereBetween('violence_date', [$current_month_start, $current_year_date])->get();
                if ($wherein != null) {
                    $current_month = SurvivorIncidentInformation::where($where)->whereIn('survivor_district_id',$wherein)->whereIn('id',$incident['survivor_incident_information']->pluck('id'))
                    ->whereBetween('violence_date', [$current_month_start, $current_year_date])->get();
                } else {
                    $current_month = SurvivorIncidentInformation::where($where)->whereIn('id',$incident['survivor_incident_information']->pluck('id'))
                    ->whereBetween('violence_date', [$current_month_start, $current_year_date])->get();
                }

                if(!empty($current_month) && count($current_month) > 0){
                    $survivor_info[$key]['current_month']['male'] = 0;
                    $survivor_info[$key]['current_month']['female'] = 0;
                    foreach($current_month as $yb){
                        // if($yb->survivor_gender->name == 'Male'){
                        //     $survivor_info[$key]['current_month']['male'] +=1 ;

                        // }

                        // if($yb->survivor_gender->name == 'Female'){
                        //     $survivor_info[$key]['current_month']['female'] +=1 ;

                        // }
                        if(!empty($yb->survivor_gender) && $yb->survivor_gender->name == 'Male'){
                            $survivor_info[$key]['current_month']['male'] +=1 ;

                        }

                        if(!empty($yb->survivor_gender) && $yb->survivor_gender->name == 'Female'){
                            $survivor_info[$key]['current_month']['female'] +=1 ;

                        }
                    }
                    $survivor_info[$key]['current_month']['total'] = $survivor_info[$key]['current_month']['male'] + $survivor_info[$key]['current_month']['female'];
                }else{
                    $survivor_info[$key]['current_month']['male'] = 0;
                    $survivor_info[$key]['current_month']['female'] = 0;
                    $survivor_info[$key]['current_month']['total'] = 0;
                }

                /*For Year Survivor Incident Information*/
                // $for_year = SurvivorIncidentInformation::whereIn('id',$incident['survivor_incident_information']->pluck('id'))
                // ->whereBetween('violence_date', [$current_year_start,$current_year_date])->get();

                if ($wherein != null) {
                    $for_year = SurvivorIncidentInformation::where($where)->whereIn('survivor_district_id',$wherein)->whereIn('id',$incident['survivor_incident_information']->pluck('id'))
                    ->whereBetween('violence_date', [$current_year_start, $current_year_date])->get();
                } else {
                    $for_year = SurvivorIncidentInformation::where($where)->whereIn('id',$incident['survivor_incident_information']->pluck('id'))
                    ->whereBetween('violence_date', [$current_year_start, $current_year_date])->get();
                }

                if(!empty($for_year) && count($for_year) > 0){
                    $survivor_info[$key]['for_year']['male'] = 0;
                    $survivor_info[$key]['for_year']['female'] = 0;
                    foreach($for_year as $yb){
                        // if($yb->survivor_gender->name == 'Male'){
                        //     $survivor_info[$key]['for_year']['male'] +=1 ;

                        // }

                        // if($yb->survivor_gender->name == 'Female'){
                        //     $survivor_info[$key]['for_year']['female'] +=1 ;

                        // }
                        if(!empty($yb->survivor_gender) && $yb->survivor_gender->name == 'Male'){
                            $survivor_info[$key]['for_year']['male'] +=1 ;

                        }

                        if(!empty($yb->survivor_gender) && $yb->survivor_gender->name == 'Female'){
                            $survivor_info[$key]['for_year']['female'] +=1 ;

                        }
                    }
                    $survivor_info[$key]['for_year']['total'] = $survivor_info[$key]['for_year']['male'] + $survivor_info[$key]['for_year']['female'];
                }else{
                    $survivor_info[$key]['for_year']['male'] = 0;
                    $survivor_info[$key]['for_year']['female'] = 0;
                    $survivor_info[$key]['for_year']['total'] = 0;
                }

                /*Year_to_present_month Survivor Incident Information*/
                // $year_to_present_month = SurvivorIncidentInformation::whereIn('id',$incident['survivor_incident_information']->pluck('id'))
                // ->whereBetween('violence_date', [$from_year_start,$current_year_date])->get();

                if ($wherein != null) {
                    $year_to_present_month = SurvivorIncidentInformation::where($where)->whereIn('survivor_district_id',$wherein)->whereIn('id',$incident['survivor_incident_information']->pluck('id'))
                    ->whereBetween('violence_date', [$from_year_start, $current_year_date])->get();
                } else {
                    $year_to_present_month = SurvivorIncidentInformation::where($where)->whereIn('id',$incident['survivor_incident_information']->pluck('id'))
                    ->whereBetween('violence_date', [$from_year_start, $current_year_date])->get();
                }

                if(!empty($year_to_present_month) && count($year_to_present_month) > 0){
                    $survivor_info[$key]['year_to_present_month']['male'] = 0;
                    $survivor_info[$key]['year_to_present_month']['female'] = 0;
                    foreach($year_to_present_month as $yb){
                        // if($yb->survivor_gender->name == 'Male'){
                        //     $survivor_info[$key]['year_to_present_month']['male'] +=1 ;

                        // }

                        // if($yb->survivor_gender->name == 'Female'){
                        //     $survivor_info[$key]['year_to_present_month']['female'] +=1 ;

                        // }
                        if(!empty($yb->survivor_gender) && $yb->survivor_gender->name == 'Male'){
                            $survivor_info[$key]['year_to_present_month']['male'] +=1 ;

                        }

                        if(!empty($yb->survivor_gender) && $yb->survivor_gender->name == 'Female'){
                            $survivor_info[$key]['year_to_present_month']['female'] +=1 ;

                        }
                    }
                    $survivor_info[$key]['year_to_present_month']['total'] = $survivor_info[$key]['year_to_present_month']['male'] + $survivor_info[$key]['year_to_present_month']['female'];
                }else{
                    $survivor_info[$key]['year_to_present_month']['male'] = 0;
                    $survivor_info[$key]['year_to_present_month']['female'] = 0;
                    $survivor_info[$key]['year_to_present_month']['total'] = 0;
                }


            }else{
                $survivor_info[$key]['year_between']['male'] = 0;
                $survivor_info[$key]['year_between']['female'] = 0;
                $survivor_info[$key]['year_between']['total'] = 0;

                $survivor_info[$key]['current_month']['male'] = 0;
                $survivor_info[$key]['current_month']['female'] = 0;
                $survivor_info[$key]['current_month']['total'] = 0;

                $survivor_info[$key]['for_year']['male'] = 0;
                $survivor_info[$key]['for_year']['female'] = 0;
                $survivor_info[$key]['for_year']['total'] = 0;

                $survivor_info[$key]['year_to_present_month']['male'] = 0;
                $survivor_info[$key]['year_to_present_month']['female'] = 0;
                $survivor_info[$key]['year_to_present_month']['total'] = 0;
            }
        }

        $pdata['survivor_info'] = $survivor_info;
        $pdata['from_year'] = $from_year;
        $pdata['to_year'] = $to_year;
        $pdata['month'] = date('F', mktime(0,0,0,$month,1));
        $pdata['support_name'] = SurvivorFinalSupport::where('id', $support_id)->first();
        // dd($pdata['support_name']->toArray());

        // return view('backend.report.mis_html_view', $pdata);

        if ($request->format_download == 1) {
            $pdf = PDF::loadView('backend.report.pdf.support_report', $pdata);
            $pdf->SetProtection(['copy', 'print'], '', 'pass');
            return $pdf->stream('document.pdf');
        } else {
            $view_link = 'backend.report.excel.mis-report-excel';
            return Excel::download(new MisReportExport($pdata,$view_link), 'support_report.xlsx');
        }
    }




    public function platformReport()
    {
        $data['platform'] = OrganizationName::where('status', 1)->get();
        $data['regions']  = Region::where('status','1')->get();
        // dd($platform->toArray());
        return view('backend.report.platform_report_view', $data);
    }

    public function platformReportPdf(Request $request)
    {
        // dd($request->toArray());
        $from_year_start = '';
        $end_date = '';
        $from_year = '';
        $to_year = '';
        $month = '';
        $where[] = ['status','=','1'];
        $wherein = [];

        if (isset($request->from_year) && isset($request->to_year)) {
            $month = $request->month;
            $from_year = $request->from_year;
            $to_year = $request->to_year;

            $from_year_start = $from_year.'-01-01';
            $end_date = $to_year.'-12-31';

            $from_month_start = $from_year.'-'.$month.'-01';
            $to_month_start = $to_year.'-'.$month.'-01';


            $from_month_end = $from_year.'-'.$month.'-'.get_days_in_month($month, $from_year);
            $to_month_end = $to_year.'-'.$month.'-'.get_days_in_month($month, $to_year);

            $to_year_start = $to_year.'-01-01';

            $from_year_end = $from_year.'-'.$month.'-'.get_days_in_month($month, $from_year);
            $to_year_end = $to_year.'-'.$month.'-'.get_days_in_month($month, $from_year);
        }

        ;
        $current_year = date("Y");
        $current_year_start = $current_year.'-01-01';
        $current_month_start = $current_year.'-'.$month.'-01';
        $current_year_date = date("Y-m-d");


        $params = [
            'from_year_start' => $from_year_start, 'end_date' =>$end_date,
            'current_year_start' => $current_year_start,
            'current_year_date' =>$current_year_date,
        // 'support_id' =>$support_id
        ];

        // From Year - To Year
        // $data = SurvivorIncidentInformation::with(['survivor_gender'])->get();
        // $data = OrganizationName::with(['survivor_incident_information' => function($query){
        //     $query->with(['survivor_gender']);

        // }])->get();
        // $data = OrganizationName::with(['survivor_incident_information' => function($query){
        //         $query->with(['survivor_gender']);
        // }])->get();
        // ->with(['survivor_incident_information' => function($query) use($params) {
        //         $query->with(['survivor_gender']);

        // }]);
        // dd($data->toArray());
        // dd($data->toArray());
        if ($request->platform_all == 1) {
            $data = OrganizationName::with(['survivor_incident_information' => function($query){
                $query->with(['survivor_gender']);
            }]);
        } else {
            $data = OrganizationName::where('id', $request->platform_id)->with(['survivor_incident_information' => function($query) use($params) {
                $query->with(['survivor_gender']);
            }]);
        }


        $incidents = $data->get();
        // dd($incidents->toArray());

        if($request->region_all != 1){
            $allDistrict = RegionAreaDetail::where('region_id',$request->region_id)->where('status','1')->groupBy('district_id')->pluck('district_id')->toArray();
            $wherein = $allDistrict;
        }else{
            $allDistrict = RegionAreaDetail::where('status','1')->groupBy('district_id')->pluck('district_id')->toArray();
            $wherein = $allDistrict;
        }
        if($request->division_id !=''){
            $where[] = ['survivor_division_id','=',$request->division_id];
        }
        if($request->district_id !=''){
            $where[] = ['survivor_district_id','=',$request->district_id];
        }
        if($request->upazila_id !=''){
            $where[] = ['survivor_upazila_id','=',$request->upazila_id];
        }


        $survivor_info = [];

        foreach($incidents as $key => $incident){
            $survivor_info[$key]['rows'] = count($incidents);
            $survivor_info[$key]['type'] = $incident->name;
            if(!empty($incident['survivor_incident_information']) && count($incident['survivor_incident_information'])>0){
                /*From - To Year Survivor Incident Information*/
                // $year_between = SurvivorIncidentInformation::whereIn('id',$incident['survivor_incident_information']->pluck('id'))
                // ->whereBetween('violence_date', [$from_year_start, $end_date])->get();
                if ($wherein != null) {
                    $year_between = SurvivorIncidentInformation::where($where)->whereIn('survivor_district_id',$wherein)->whereIn('id',$incident['survivor_incident_information']->pluck('id'))
                    ->whereBetween('violence_date', [$from_year_start, $end_date])->get();
                } else {
                    $year_between = SurvivorIncidentInformation::where($where)->whereIn('id',$incident['survivor_incident_information']->pluck('id'))
                    ->whereBetween('violence_date', [$from_year_start, $end_date])->get();
                }

                if(!empty($year_between) && count($year_between) > 0){
                    $survivor_info[$key]['year_between']['male'] = 0;
                    $survivor_info[$key]['year_between']['female'] = 0;
                    foreach($year_between as $yb){

                            // dd($yb->survivor_gender->toArray());
                        if(!empty($yb->survivor_gender) && $yb->survivor_gender->name == 'Male'){
                            $survivor_info[$key]['year_between']['male'] +=1 ;

                        }

                        if(!empty($yb->survivor_gender) && $yb->survivor_gender->name == 'Female'){
                            $survivor_info[$key]['year_between']['female'] +=1 ;

                        }

                    }
                    $survivor_info[$key]['year_between']['total'] = $survivor_info[$key]['year_between']['male'] + $survivor_info[$key]['year_between']['female'];
                }else{
                    $survivor_info[$key]['year_between']['male'] = 0;
                    $survivor_info[$key]['year_between']['female'] = 0;
                    $survivor_info[$key]['year_between']['total'] = 0;
                }

                /*Current Month Survivor Incident Information*/
                // $current_month = SurvivorIncidentInformation::whereIn('id',$incident['survivor_incident_information']->pluck('id'))
                // ->whereBetween('violence_date', [$current_month_start, $current_year_date])->get();
                if ($wherein != null) {
                    $current_month = SurvivorIncidentInformation::where($where)->whereIn('survivor_district_id',$wherein)->whereIn('id',$incident['survivor_incident_information']->pluck('id'))
                    ->whereBetween('violence_date', [$current_month_start, $current_year_date])->get();
                } else {
                    $current_month = SurvivorIncidentInformation::where($where)->whereIn('id',$incident['survivor_incident_information']->pluck('id'))
                    ->whereBetween('violence_date', [$current_month_start, $current_year_date])->get();
                }

                if(!empty($current_month) && count($current_month) > 0){
                    $survivor_info[$key]['current_month']['male'] = 0;
                    $survivor_info[$key]['current_month']['female'] = 0;
                    foreach($current_month as $yb){
                        if(!empty($yb->survivor_gender) && $yb->survivor_gender->name == 'Male'){
                            $survivor_info[$key]['current_month']['male'] +=1 ;

                        }

                        if(!empty($yb->survivor_gender) && $yb->survivor_gender->name == 'Female'){
                            $survivor_info[$key]['current_month']['female'] +=1 ;

                        }
                    }
                    $survivor_info[$key]['current_month']['total'] = $survivor_info[$key]['current_month']['male'] + $survivor_info[$key]['current_month']['female'];
                }else{
                    $survivor_info[$key]['current_month']['male'] = 0;
                    $survivor_info[$key]['current_month']['female'] = 0;
                    $survivor_info[$key]['current_month']['total'] = 0;
                }

                /*For Year Survivor Incident Information*/
                // $for_year = SurvivorIncidentInformation::whereIn('id',$incident['survivor_incident_information']->pluck('id'))
                // ->whereBetween('violence_date', [$current_year_start,$current_year_date])->get();
                if ($wherein != null) {
                    $for_year = SurvivorIncidentInformation::where($where)->whereIn('survivor_district_id',$wherein)->whereIn('id',$incident['survivor_incident_information']->pluck('id'))
                    ->whereBetween('violence_date', [$current_year_start, $current_year_date])->get();
                } else {
                    $for_year = SurvivorIncidentInformation::where($where)->whereIn('id',$incident['survivor_incident_information']->pluck('id'))
                    ->whereBetween('violence_date', [$current_year_start, $current_year_date])->get();
                }

                if(!empty($for_year) && count($for_year) > 0){
                    $survivor_info[$key]['for_year']['male'] = 0;
                    $survivor_info[$key]['for_year']['female'] = 0;
                    foreach($for_year as $yb){
                        if(!empty($yb->survivor_gender) && $yb->survivor_gender->name == 'Male'){
                            $survivor_info[$key]['for_year']['male'] +=1 ;

                        }

                        if(!empty($yb->survivor_gender) && $yb->survivor_gender->name == 'Female'){
                            $survivor_info[$key]['for_year']['female'] +=1 ;

                        }
                    }
                    $survivor_info[$key]['for_year']['total'] = $survivor_info[$key]['for_year']['male'] + $survivor_info[$key]['for_year']['female'];
                }else{
                    $survivor_info[$key]['for_year']['male'] = 0;
                    $survivor_info[$key]['for_year']['female'] = 0;
                    $survivor_info[$key]['for_year']['total'] = 0;
                }

                /*Year_to_present_month Survivor Incident Information*/
                // $year_to_present_month = SurvivorIncidentInformation::whereIn('id',$incident['survivor_incident_information']->pluck('id'))
                // ->whereBetween('violence_date', [$from_year_start,$current_year_date])->get();
                if ($wherein != null) {
                    $year_to_present_month = SurvivorIncidentInformation::where($where)->whereIn('survivor_district_id',$wherein)->whereIn('id',$incident['survivor_incident_information']->pluck('id'))
                    ->whereBetween('violence_date', [$from_year_start, $current_year_date])->get();
                } else {
                    $year_to_present_month = SurvivorIncidentInformation::where($where)->whereIn('id',$incident['survivor_incident_information']->pluck('id'))
                    ->whereBetween('violence_date', [$from_year_start, $current_year_date])->get();
                }

                if(!empty($year_to_present_month) && count($year_to_present_month) > 0){
                    $survivor_info[$key]['year_to_present_month']['male'] = 0;
                    $survivor_info[$key]['year_to_present_month']['female'] = 0;
                    foreach($year_to_present_month as $yb){
                        if(!empty($yb->survivor_gender) && $yb->survivor_gender->name == 'Male'){
                            $survivor_info[$key]['year_to_present_month']['male'] +=1 ;

                        }

                        if(!empty($yb->survivor_gender) && $yb->survivor_gender->name == 'Female'){
                            $survivor_info[$key]['year_to_present_month']['female'] +=1 ;

                        }
                    }
                    $survivor_info[$key]['year_to_present_month']['total'] = $survivor_info[$key]['year_to_present_month']['male'] + $survivor_info[$key]['year_to_present_month']['female'];
                }else{
                    $survivor_info[$key]['year_to_present_month']['male'] = 0;
                    $survivor_info[$key]['year_to_present_month']['female'] = 0;
                    $survivor_info[$key]['year_to_present_month']['total'] = 0;
                }


            }else{
                $survivor_info[$key]['year_between']['male'] = 0;
                $survivor_info[$key]['year_between']['female'] = 0;
                $survivor_info[$key]['year_between']['total'] = 0;

                $survivor_info[$key]['current_month']['male'] = 0;
                $survivor_info[$key]['current_month']['female'] = 0;
                $survivor_info[$key]['current_month']['total'] = 0;

                $survivor_info[$key]['for_year']['male'] = 0;
                $survivor_info[$key]['for_year']['female'] = 0;
                $survivor_info[$key]['for_year']['total'] = 0;

                $survivor_info[$key]['year_to_present_month']['male'] = 0;
                $survivor_info[$key]['year_to_present_month']['female'] = 0;
                $survivor_info[$key]['year_to_present_month']['total'] = 0;
            }
        }

        $pdata['survivor_info'] = $survivor_info;
        // dd($survivor_info);
        $pdata['from_year'] = $from_year;
        $pdata['to_year'] = $to_year;
        $pdata['month'] = date('F', mktime(0,0,0,$month,1));

        // return view('backend.report.pdf.platform_report', $pdata);

        if ($request->format_download == 1) {
            $pdf = PDF::loadView('backend.report.pdf.platform_report', $pdata);
            $pdf->SetProtection(['copy', 'print'], '', 'pass');
            return $pdf->stream('document.pdf');
        } else {
            $view_link = 'backend.report.excel.mis-report-excel';
            return Excel::download(new MisReportExport($pdata,$view_link), 'platform_report.xlsx');
        }
    }

    public function dashboardReport()
    {
        // $auth_user = User::with(['setup_user_area'])->where('id', Auth::id())->first();
        // $div = [];
        // foreach ($auth_user->setup_user_area as $key => $value) {
        //     if (!empty($value)) {
        //         $div['region_id'][] = $value->region_id;
        //         $div['division_id'][] = $value->division_id;
        //         $div['district_id'][] = $value->district_id;
        //         $div['upazila_id'][] = $value->upazila_id;
        //         $div['union_id'][] = $value->union_id;
        //     }
        // }
        // $survivor_info = SurvivorIncidentInformation::whereIn('survivor_district_id', $div['district_id'])->get();
        // dd($survivor_info->toArray());

        $data['divisions']              = Division::all();
        $data['regions']                = Region::where('status','1')->get();
        $data['violence_categories']    = ViolenceCategory::where('status','1')->get();
        $data['header_left'] = '';
        $data['header_right'] = '';
        $data['report'] = [];
        return view('backend.report.dashboard_report_view', $data);

    }

    public function dashboardReportData(Request $request)
    {
        // dd($request->all());
        $where[] = ['status','=','1'];
        $wherein = [];
        $start_date = date('Y-m-d',strtotime($request->start_date));
        $end_date   = date('Y-m-d',strtotime($request->end_date));
        // dd($start_date);

        if($request->region_all != 1){
            $allDistrict = RegionAreaDetail::where('region_id',$request->region_id)->where('status','1')->groupBy('district_id')->pluck('district_id')->toArray();
            $wherein = $allDistrict;
        }else{
            $allDistrict = RegionAreaDetail::where('status','1')->groupBy('district_id')->pluck('district_id')->toArray();
            $wherein = $allDistrict;
        }
        if($request->division_id !=''){
            $where[] = ['survivor_division_id','=',$request->division_id];
        }
        if($request->district_id !=''){
            $where[] = ['survivor_district_id','=',$request->district_id];
        }

        // if($request->start_date !=''){
        //     $where[] = ['violence_date','=>',date('Y-m-d',strtotime($request->start_date))];
        // }
        // if($request->end_date !=''){
        //     $where[] = ['violence_date','=<',date('Y-m-d',strtotime($request->end_date))];
        // }
        if($request->violence_category_id !=''){
            $where[] = ['violence_category_id','=',$request->violence_category_id];
        }
        if($request->violence_sub_category_id !=''){
            $where[] = ['violence_sub_category_id','=',$request->violence_sub_category_id];
        }
        if($request->violence_name_id !=''){
            $where[] = ['violence_name_id','=',$request->violence_name_id];
        }

        // dd($where);

        $html=[];

        if ($request->report_name == 1) {
            if($request->district_id != null){
                foreach (SurvivorIncidentInformation::where($where)->whereIn('survivor_district_id',$wherein)->groupBy('violence_category_id')->get() as $keyy => $violence_cat){
                    $countsurvivor = SurvivorIncidentInformation::where($where)->whereIn('survivor_district_id',$wherein)->where([['survivor_district_id',$violence_cat->survivor_district_id],['violence_category_id',$violence_cat->violence_category_id]])->count();
                    if($violence_cat['violencecategoryname']['name'] != null &&  $countsurvivor != 0){
                        $html[$keyy]['horizontal'] = $violence_cat['violencecategoryname']['name'];
                        $html[$keyy][$violence_cat['violencecategoryname']['name']] = $countsurvivor;
                        $html['harasment_type'][$violence_cat['violencecategoryname']['name']] = $violence_cat['violencecategoryname']['name'];
                    }
                }
            }else{
                foreach (SurvivorIncidentInformation::where($where)->whereIn('survivor_district_id',$wherein)->groupBy('survivor_district_id')->get() as $key => $survivor) {
                    foreach (SurvivorIncidentInformation::where($where)->whereIn('survivor_district_id',$wherein)->groupBy('violence_category_id')->get() as $keyy => $violence_cat){
                        $countsurvivor = SurvivorIncidentInformation::where($where)->whereIn('survivor_district_id',$wherein)->where([['survivor_district_id',$survivor->survivor_district_id],['violence_category_id',$violence_cat->violence_category_id]])->count();
                        if($violence_cat['violencecategoryname']['name'] != null && $countsurvivor != 0){
                            $html[$key]['horizontal'] = $survivor['survivor_district']['name'];
                            $html[$key][$violence_cat['violencecategoryname']['name']] = $countsurvivor;
                            $html['harasment_type'][$violence_cat['violencecategoryname']['name']] = $violence_cat['violencecategoryname']['name'];
                        }
                    }
                }
            }
        } elseif ($request->report_name == 2) {
            $survivor_incident_information_plucks = SurvivorIncidentInformation::where($where)->whereBetween('violence_date', [$start_date, $end_date])->whereIn('survivor_district_id',$wherein)->get()->pluck('violence_reason_id')->toArray();

            $arraymergedata = [];
            foreach ($survivor_incident_information_plucks as $key => $survivor_incident_information_pluck) {
                $othersarraydata= explode(',',$survivor_incident_information_pluck);
                $arraymergedata = array_merge($arraymergedata,$othersarraydata);
            }
            $survivor_incident_information = array_filter(array_unique($arraymergedata));
            foreach ($survivor_incident_information as $keyy => $violence_reason){
                // $countsurvivor = SurvivorIncidentInformation::where($where)->whereIn('survivor_district_id',$wherein)->where('violence_reason_id','like','%'.$violence_reason.'%')->count();


                $countsurvivor = SurvivorIncidentInformation::where(function($query) use ($where,$wherein,$violence_reason) {
                    $query->where($where)
                    ->whereIn('survivor_district_id',$wherein)
                    ->where('violence_reason_id','like','%,'.$violence_reason.'%');
                })->orWhere(function($query) use ($where,$wherein,$violence_reason) {
                    $query->where($where)
                    ->whereIn('survivor_district_id',$wherein)
                    ->where('violence_reason_id','like','%'.$violence_reason.',%');
                })->orWhere(function($query) use ($where,$wherein,$violence_reason) {
                    $query->where($where)
                    ->whereIn('survivor_district_id',$wherein)
                    ->where('violence_reason_id',$violence_reason);
                })->count();

                $violence_name = ViolenceReason::find($violence_reason)['name'];
                if($countsurvivor != 0 && $violence_name != null){
                    $html['report'][$keyy]['pie_category'] = $violence_name;
                    $html['report'][$keyy]['pie_count'] = $countsurvivor;
                }
            }
        } elseif ($request->report_name == 3) {
            $survivor_incident_information = SurvivorIncidentInformation::where($where)->whereBetween('violence_date', [$start_date, $end_date])->whereIn('survivor_district_id',$wherein)->get()->pluck('survivor_autistic_id')->toArray();

            $survivor_incident_informations = array_filter(array_unique($survivor_incident_information));


            foreach ($survivor_incident_informations as $keyy => $autistic){
                // dd($autistic);
                // $countsurvivor = SurvivorIncidentInformation::where($where)->whereIn('survivor_district_id',$wherein)->where('autistic_id','like','%'.$autistic.'%')->count();


                $countsurvivor = SurvivorIncidentInformation::where($where)->whereIn('survivor_district_id',$wherein)->where('survivor_autistic_id', $autistic)->get()->count();
                // dd($countsurvivor);

                $autistic_name = SurvivorAutisticInformation::find($autistic)['name'];
                // if($countsurvivor != 0 && $autistic_name != null){
                $html['report'][$keyy]['pie_category'] = $autistic_name;
                $html['report'][$keyy]['pie_count'] = $countsurvivor;
                // }

            }
        } elseif ($request->report_name == 4) {
            $survivor_0_to_17 = SurvivorIncidentInformation::where($where)->whereBetween('violence_date', [$start_date, $end_date])->whereBetween('survivor_age', [0,17])->whereIn('survivor_district_id',$wherein)->get()->count();
            $survivor_18_to_35 = SurvivorIncidentInformation::where($where)->whereBetween('violence_date', [$start_date, $end_date])->whereBetween('survivor_age', [18,35])->whereIn('survivor_district_id',$wherein)->get()->count();
            $survivor_36_to_above = SurvivorIncidentInformation::where($where)->whereBetween('violence_date', [$start_date, $end_date])->where('survivor_age', '>', 36)->whereIn('survivor_district_id',$wherein)->get()->count();
            // dd($survivor_0_to_17,$survivor_18_to_35,$survivor_36_to_above);

            $html['report'][0]['pie_category']= '0 - 17';
            $html['report'][0]['pie_count']= $survivor_0_to_17;

            $html['report'][1]['pie_category']= '18 - 35';
            $html['report'][1]['pie_count']= $survivor_18_to_35;

            $html['report'][2]['pie_category']= '36 - above';
            $html['report'][2]['pie_count']= $survivor_36_to_above;
        } elseif ($request->report_name == 5) {
            $perpetrator_0_to_17 = SurvivorIncidentInformation::where($where)->whereBetween('violence_date', [$start_date, $end_date])->whereBetween('perpetrator_age', [0,17])->whereIn('survivor_district_id',$wherein)->get()->count();
            $perpetrator_18_to_35 = SurvivorIncidentInformation::where($where)->whereBetween('violence_date', [$start_date, $end_date])->whereBetween('perpetrator_age', [18,35])->whereIn('survivor_district_id',$wherein)->get()->count();
            $perpetrator_36_to_above = SurvivorIncidentInformation::where($where)->whereBetween('violence_date', [$start_date, $end_date])->where('perpetrator_age', '>', 36)->whereIn('survivor_district_id',$wherein)->get()->count();
            // dd($survivor_0_to_17,$survivor_18_to_35,$survivor_36_to_above);

            $html['report'][0]['pie_category']= '0 - 17';
            $html['report'][0]['pie_count']= $perpetrator_0_to_17;

            $html['report'][1]['pie_category']= '18 - 35';
            $html['report'][1]['pie_count']= $perpetrator_18_to_35;

            $html['report'][2]['pie_category']= '36 - above';
            $html['report'][2]['pie_count']= $perpetrator_36_to_above;
        } elseif ($request->report_name == 6) {
            $survivor_incident_information = SurvivorIncidentInformation::where($where)->whereBetween('violence_date', [$start_date, $end_date])->whereIn('survivor_district_id',$wherein)->get()->pluck('perpetrator_relationship_id')->toArray();

            $survivor_incident_informations = array_filter(array_unique($survivor_incident_information));
            // dd($survivor_incident_informations);
            $i = 0;

            foreach ($survivor_incident_informations as $keyy => $p_relationship){
                // dd($autistic);
                // $countsurvivor = SurvivorIncidentInformation::where($where)->whereIn('survivor_district_id',$wherein)->where('autistic_id','like','%'.$autistic.'%')->count();


                $countsurvivor = SurvivorIncidentInformation::where($where)->whereBetween('violence_date', [$start_date, $end_date])->whereIn('survivor_district_id',$wherein)->where('perpetrator_relationship_id', $p_relationship)->get()->count();
                // dd($countsurvivor);

                $p_relationship_name = SurvivorRelationship::find($p_relationship)['name'];
                // if($countsurvivor != 0 && $autistic_name != null){
                $i++;
                $html['report'][$countsurvivor.$i]['pie_category'] = $p_relationship_name;
                $html['report'][$countsurvivor.$i]['pie_count'] = $countsurvivor;
                // }

            }
        } elseif ($request->report_name == 7) {
            $survivor_incident_information = SurvivorIncidentInformation::where($where)->whereBetween('violence_date', [$start_date, $end_date])->whereIn('survivor_district_id',$wherein)->get()->pluck('perpetrator_place_id')->toArray();

            $survivor_incident_informations = array_filter(array_unique($survivor_incident_information));
            // dd($survivor_incident_informations);


            foreach ($survivor_incident_informations as $keyy => $p_place){
                // dd($autistic);
                // $countsurvivor = SurvivorIncidentInformation::where($where)->whereIn('survivor_district_id',$wherein)->where('autistic_id','like','%'.$autistic.'%')->count();


                $countsurvivor = SurvivorIncidentInformation::where($where)->whereBetween('violence_date', [$start_date, $end_date])->whereIn('survivor_district_id',$wherein)->where('perpetrator_place_id', $p_place)->get()->count();
                // dd($countsurvivor);

                $place_name = PerpetratorPlace::find($p_place)['name'];
                // if($countsurvivor != 0 && $autistic_name != null){
                $html['report'][$keyy]['pie_category'] = $place_name;
                $html['report'][$keyy]['pie_count'] = $countsurvivor;
                // }

            }
        } elseif ($request->report_name == 8) {
            $survivor_incident_information = SurvivorIncidentInformation::where($where)->whereBetween('violence_date', [$start_date, $end_date])->whereIn('survivor_district_id',$wherein)->get()->pluck('violence_place_id')->toArray();

            $survivor_incident_informations = array_filter(array_unique($survivor_incident_information));


            foreach ($survivor_incident_informations as $keyy => $violence_place){
                // dd($autistic);
                // $countsurvivor = SurvivorIncidentInformation::where($where)->whereIn('survivor_district_id',$wherein)->where('autistic_id','like','%'.$autistic.'%')->count();


                $countsurvivor = SurvivorIncidentInformation::where($where)->whereBetween('violence_date', [$start_date, $end_date])->whereIn('survivor_district_id',$wherein)->where('violence_place_id', $violence_place)->get()->count();
                // dd($countsurvivor);

                $violence_place_name = SurvivorViolencePlace::find($violence_place)['name'];
                // if($countsurvivor != 0 && $autistic_name != null){
                $html['report'][$keyy]['pie_category'] = $violence_place_name;
                $html['report'][$keyy]['pie_count'] = $countsurvivor;
                // }

            }
        } elseif ($request->report_name == 9) {
            $legel_yes = SurvivorIncidentInformation::where($where)->whereBetween('violence_date', [$start_date, $end_date])->where('case_status', "Yes")->whereIn('survivor_district_id',$wherein)->get()->count();
            $legel_under_process = SurvivorIncidentInformation::where($where)->whereBetween('violence_date', [$start_date, $end_date])->where('case_status', "Under Process")->whereIn('survivor_district_id',$wherein)->get()->count();
            $legel_no = SurvivorIncidentInformation::where($where)->whereBetween('violence_date', [$start_date, $end_date])->where('case_status', "No")->whereIn('survivor_district_id',$wherein)->get()->count();
            $legel_resolve = SurvivorIncidentInformation::where($where)->whereBetween('violence_date', [$start_date, $end_date])->where('case_status', "Resolved through local arbitration")->whereIn('survivor_district_id',$wherein)->get()->count();
            // dd($legel_yes,$legel_under_process,$legel_no,$legel_resolve);

            $html['report'][0]['pie_category']= 'Yes';
            $html['report'][0]['pie_count']= $legel_yes;

            $html['report'][1]['pie_category']= 'Under Process';
            $html['report'][1]['pie_count']= $legel_under_process;

            $html['report'][2]['pie_category']= 'No';
            $html['report'][2]['pie_count']= $legel_no;

            $html['report'][3]['pie_category']= 'Resolved through local arbitration';
            $html['report'][3]['pie_count']= $legel_resolve;
        } elseif ($request->report_name == 10) {
            $survivor_incident_information = SurvivorIncidentInformation::where($where)->whereBetween('violence_date', [$start_date, $end_date])->whereIn('survivor_district_id',$wherein)->get()->pluck('survivor_marital_status_id')->toArray();

            $survivor_incident_informations = array_filter(array_unique($survivor_incident_information));
            // dd($survivor_incident_informations);
            $i = 0;

            foreach ($survivor_incident_informations as $keyy => $p_relationship){
                $countsurvivor = SurvivorIncidentInformation::where($where)->whereBetween('violence_date', [$start_date, $end_date])->whereIn('survivor_district_id',$wherein)->where('survivor_marital_status_id', $p_relationship)->get()->count();
                // dd($countsurvivor);

                $p_relationship_name = MaritalStatus::find($p_relationship)['name'];
                // if($countsurvivor != 0 && $autistic_name != null){
                $i++;
                $html['report'][$countsurvivor.$i]['pie_category'] = $p_relationship_name;
                $html['report'][$countsurvivor.$i]['pie_count'] = $countsurvivor;

            }
        } elseif ($request->report_name == 11) {
            $survivor_incident_information = SurvivorIncidentInformation::where($where)->whereBetween('violence_date', [$start_date, $end_date])->whereIn('survivor_district_id',$wherein)->get()->pluck('perpetrator_marital_status_id')->toArray();

            $survivor_incident_informations = array_filter(array_unique($survivor_incident_information));
            // dd($survivor_incident_informations);
            $i = 0;

            foreach ($survivor_incident_informations as $keyy => $p_relationship){
                $countsurvivor = SurvivorIncidentInformation::where($where)->whereBetween('violence_date', [$start_date, $end_date])->whereIn('survivor_district_id',$wherein)->where('perpetrator_marital_status_id', $p_relationship)->get()->count();
                // dd($countsurvivor);

                $p_relationship_name = MaritalStatus::find($p_relationship)['name'];
                // if($countsurvivor != 0 && $autistic_name != null){
                $i++;
                $html['report'][$countsurvivor.$i]['pie_category'] = $p_relationship_name;
                $html['report'][$countsurvivor.$i]['pie_count'] = $countsurvivor;
                // }

            }
        } elseif ($request->report_name == 12) {
            $survivor_incident_information = SurvivorIncidentInformation::where($where)->whereBetween('violence_date', [$start_date, $end_date])->whereIn('survivor_district_id',$wherein)->get()->pluck('survivor_occupation_id')->toArray();

            $survivor_incident_informations = array_filter(array_unique($survivor_incident_information));
        // dd($survivor_incident_informations);
            $i = 0;

            foreach ($survivor_incident_informations as $keyy => $p_relationship){
            // dd($autistic);
            // $countsurvivor = SurvivorIncidentInformation::where($where)->whereIn('survivor_district_id',$wherein)->where('autistic_id','like','%'.$autistic.'%')->count();


                $countsurvivor = SurvivorIncidentInformation::where($where)->whereBetween('violence_date', [$start_date, $end_date])->whereIn('survivor_district_id',$wherein)->where('survivor_occupation_id', $p_relationship)->get()->count();
            // dd($countsurvivor);

                $p_relationship_name = Occupation::find($p_relationship)['name'];
            // if($countsurvivor != 0 && $autistic_name != null){
                $i++;
                $html['report'][$countsurvivor.$i]['pie_category'] = $p_relationship_name;
                $html['report'][$countsurvivor.$i]['pie_count'] = $countsurvivor;
            // }

            }
        } elseif ($request->report_name == 13) {
            $survivor_incident_information = SurvivorIncidentInformation::where($where)->whereBetween('violence_date', [$start_date, $end_date])->whereIn('survivor_district_id',$wherein)->get()->pluck('perpetrator_occupation_id')->toArray();

            $survivor_incident_informations = array_filter(array_unique($survivor_incident_information));
            // dd($survivor_incident_informations);
            $i = 0;

            foreach ($survivor_incident_informations as $keyy => $p_relationship){
                // dd($autistic);
                // $countsurvivor = SurvivorIncidentInformation::where($where)->whereIn('survivor_district_id',$wherein)->where('autistic_id','like','%'.$autistic.'%')->count();


                $countsurvivor = SurvivorIncidentInformation::where($where)->whereBetween('violence_date', [$start_date, $end_date])->whereIn('survivor_district_id',$wherein)->where('perpetrator_occupation_id', $p_relationship)->get()->count();
                // dd($countsurvivor);

                $p_relationship_name = Occupation::find($p_relationship)['name'];
                // if($countsurvivor != 0 && $autistic_name != null){
                $i++;
                $html['report'][$countsurvivor.$i]['pie_category'] = $p_relationship_name;
                $html['report'][$countsurvivor.$i]['pie_count'] = $countsurvivor;
                // }

            }
        } elseif ($request->report_name == 14) {
            $survivor_incident_information = SurvivorIncidentInformation::where($where)->whereBetween('violence_date', [$start_date, $end_date])->whereIn('survivor_district_id',$wherein)->get()->pluck('perpetrator_relationship_id')->toArray();

            $survivor_incident_informations = array_filter(array_unique($survivor_incident_information));
            // dd($survivor_incident_informations);
            $i = 0;

            foreach ($survivor_incident_informations as $keyy => $p_relationship){
                // dd($autistic);
                // $countsurvivor = SurvivorIncidentInformation::where($where)->whereIn('survivor_district_id',$wherein)->where('autistic_id','like','%'.$autistic.'%')->count();


                $countsurvivor = SurvivorIncidentInformation::where($where)->whereBetween('violence_date', [$start_date, $end_date])->whereIn('survivor_district_id',$wherein)->where('perpetrator_relationship_id', $p_relationship)->get()->count();
                // dd($countsurvivor);

                $p_relationship_name = FamilyMember::find($p_relationship)['name'];
                // if($countsurvivor != 0 && $autistic_name != null){
                $i++;
                $html['report'][$countsurvivor.$i]['pie_category'] = $p_relationship_name;
                $html['report'][$countsurvivor.$i]['pie_count'] = $countsurvivor;
                // }

            }
        } elseif ($request->report_name == 15) {
            $survivor_incident_information = SurvivorIncidentInformation::where($where)->whereBetween('violence_date', [$start_date, $end_date])->whereIn('survivor_district_id',$wherein)->get()->pluck('not_filing_reason')->toArray();

            $survivor_incident_informations = array_filter(array_unique($survivor_incident_information));
            // dd($survivor_incident_informations);
            $i = 0;

            foreach ($survivor_incident_informations as $keyy => $p_relationship){
                // dd($autistic);
                // $countsurvivor = SurvivorIncidentInformation::where($where)->whereIn('survivor_district_id',$wherein)->where('autistic_id','like','%'.$autistic.'%')->count();


                $countsurvivor = SurvivorIncidentInformation::where($where)->whereBetween('violence_date', [$start_date, $end_date])->whereIn('survivor_district_id',$wherein)->where('not_filing_reason', $p_relationship)->get()->count();
                // dd($countsurvivor);

                $p_relationship_name = LegelInitiativeReason::find($p_relationship)['name'];
                // if($countsurvivor != 0 && $autistic_name != null){
                $i++;
                $html['report'][$countsurvivor.$i]['pie_category'] = $p_relationship_name;
                $html['report'][$countsurvivor.$i]['pie_count'] = $countsurvivor;
                // }

            }
        } else {
            $survivor_incident_information = SurvivorIncidentInformation::where($where)->whereBetween('violence_date', [$start_date, $end_date])->whereIn('survivor_district_id',$wherein)->get()->pluck('survivor_situation_id')->toArray();

            // dd($survivor_incident_information);
            $survivor_incident_informations = array_filter(array_unique($survivor_incident_information));
            $i = 0;

            foreach ($survivor_incident_informations as $keyy => $p_relationship){
                $countsurvivor = SurvivorIncidentInformation::where($where)->whereBetween('violence_date', [$start_date, $end_date])->whereIn('survivor_district_id',$wherein)->where('survivor_situation_id', $p_relationship)->get()->count();
                // dd($countsurvivor);

                $p_relationship_name = SurvivorSituation::find($p_relationship)['name'];
                // if($countsurvivor != 0 && $autistic_name != null){
                $i++;
                $html['report'][$countsurvivor.$i]['pie_category'] = $p_relationship_name;
                $html['report'][$countsurvivor.$i]['pie_count'] = $countsurvivor;
                // }

            }
        }

        $html['divisions']              = Division::all();
        $html['regions']                = Region::where('status','1')->get();
        $html['violence_categories']    = ViolenceCategory::where('status','1')->get();
        if ($request->report_name == 1) {
            $html['header_left'] = "District Name";
            $html['header_right'] = "Value";
        } elseif ($request->report_name == 2) {
            $html['header_left'] = "Reason Name";
            $html['header_right'] = "Number";
        } elseif ($request->report_name == 3) {
            $html['header_left'] = "Survivor Disability Status";
            $html['header_right'] = "Number";
        } elseif ($request->report_name == 4) {
            $html['header_left'] = "Age Group of Survivors";
            $html['header_right'] = "Number";
        } elseif ($request->report_name == 5) {
            $html['header_left'] = "Perpetrators Age Analysis";
            $html['header_right'] = "Number";
        } elseif ($request->report_name == 6) {
            $html['header_left'] = "Relationship Between Perpetrators and Survivors";
            $html['header_right'] = "Number";
        } elseif ($request->report_name == 7) {
            $html['header_left'] = "Current Situation of Perpetrator";
            $html['header_right'] = "Number";
        } elseif ($request->report_name == 8) {
            $html['header_left'] = "Violence Place";
            $html['header_right'] = "Number";
        } elseif ($request->report_name == 9) {
            $html['header_left'] = "Status of Legal Initiatives";
            $html['header_right'] = "Number";
        } elseif ($request->report_name == 10) {
            $html['header_left'] = "Marital Status";
            $html['header_right'] = "Number";
        } elseif ($request->report_name == 11) {
            $html['header_left'] = "Marital Status";
            $html['header_right'] = "Number";
        } elseif ($request->report_name == 12) {
            $html['header_left'] = "Occupations";
            $html['header_right'] = "Number";
        } elseif ($request->report_name == 13) {
            $html['header_left'] = "Occupations";
            $html['header_right'] = "Number";
        } elseif ($request->report_name == 14) {
            $html['header_left'] = "family members";
            $html['header_right'] = "Number";
        } elseif ($request->report_name == 15) {
            $html['header_left'] = "Reasons of not taking legal initiatives";
            $html['header_right'] = "Number";
        }else {
            $html['header_left'] = "Survivors situation";
            $html['header_right'] = "Number";
        }
        // dd($html);
        return view('backend.report.dashboard_report_view', $html);
    }

}
